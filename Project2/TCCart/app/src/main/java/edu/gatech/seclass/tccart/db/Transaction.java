package edu.gatech.seclass.tccart.db;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

import android.view.View;

import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.Date;

import edu.gatech.seclass.services.EmailService;
import edu.gatech.seclass.tccart.utility.Email;
import edu.gatech.seclass.tccart.utility.TCCartHelpers;

/**
 * Entity mapped to table "CustomerTransactions".
 */
public class Transaction extends TransactionBase {

    private Long id;
    private String customerID;
    private java.util.Date TransactionDate;
    private Double CartTotal;
    private Double CreditDiscount;
    private Double VIPDiscount;
    private Double Total;

    // KEEP FIELDS - put your custom fields here
    private Customer customer;
    // KEEP FIELDS END

    public Transaction() {
    }

    public Transaction(Long id) {
        this.id = id;
    }

    public Transaction(Long id, String customerID, java.util.Date TransactionDate, Double CartTotal, Double CreditDiscount, Double VIPDiscount, Double Total) {
        this.id = id;
        this.customerID = customerID;
        this.TransactionDate = TransactionDate;
        this.CartTotal = CartTotal;
        this.CreditDiscount = CreditDiscount;
        this.VIPDiscount = VIPDiscount;
        this.Total = Total;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCustomerID() {
        return customerID;
    }

    public void setCustomerID(String customerID) {
        this.customerID = customerID;
    }

    public java.util.Date getTransactionDate() {
        return TransactionDate;
    }

    public void setTransactionDate(java.util.Date TransactionDate) {
        this.TransactionDate = TransactionDate;
    }

    public Double getCartTotal() {
        return CartTotal;
    }

    public void setCartTotal(Double CartTotal) {
        this.CartTotal = CartTotal;
    }

    public Double getCreditDiscount() {
        return CreditDiscount;
    }

    public void setCreditDiscount(Double CreditDiscount) {
        this.CreditDiscount = CreditDiscount;
    }

    public Double getVIPDiscount() {
        return VIPDiscount;
    }

    public void setVIPDiscount(Double VIPDiscount) {
        this.VIPDiscount = VIPDiscount;
    }

    public Double getTotal() {
        return Total;
    }

    public void setTotal(Double Total) {
        this.Total = Total;
    }

    // KEEP METHODS - put your custom methods here

    public class EmailResult{
        public boolean SendSuccessfully = false;
        public String EmailMessage = "";
    }

    public Transaction(Customer c) {
        customer = c;
        this.setCustomerID(c.getUniqueID());
    }

    private transient double creditBalanceInitial;
    private transient boolean creditBalanceChanged = false;
    private transient boolean vipStatusReached = false;

    public EmailResult calculateBalanceAndSentEmail() {

        EmailResult result = new EmailResult();

        Date rewardExpDate;

        double creditBalance = customer.getRewardBalance();
        creditBalanceInitial = customer.getRewardBalance();
        double spendBalance = customer.getSpendBalance();

        creditBalance -= this.getCreditDiscount();
        spendBalance += this.getTotal();

        //add $3 credit if order >= $30 and push out expiration date by 31 days
        if (this.Total >= 30.00) {
            creditBalance += 3.00;
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.MONTH, 1);
            rewardExpDate = cal.getTime();
            customer.setRewardExpireDate(rewardExpDate);
        }

        //check if credit balance changed, set credit balance flag
        if (this.getTotal() >= 30.00 || this.getCreditDiscount() != 0.00) {
            creditBalanceChanged = true;
        }

        //check if VIP status reached, set email VIP flag, set VIP discount begins
        if (spendBalance > 300.00 && ! customer.getVIPNotificationSent()) {
            vipStatusReached = true;
            customer.setVIPNotificationSent(true);
            customer.setVIPDiscountBegins(TCCartHelpers.firstDayOfNextYear());
        }

        if ( creditBalance == 0.0)
            customer.setRewardExpireDate(null);

        customer.setRewardBalance(creditBalance);
        customer.setSpendBalance(spendBalance);

        return this.sendEmails();
    }

    public EmailResult sendEmails() {

        EmailResult result = new EmailResult();

        DecimalFormat df = new DecimalFormat("0.00");

        boolean sendSuccessfully= false;
        String emailString = "Transaction " + this.getId().toString() +
                " completed on " + this.getTransactionDate().toString() +
                " for a total of " + this.getTotal() + ".";

        if (this.getVIPDiscount() > 0.00) {
            emailString = emailString + " A VIP discount of $" + df.format(this.getVIPDiscount()) +
                    " was applied.";
        }

        if (creditBalanceChanged) {
            emailString = emailString + " Your starting credit balance was $" + df.format(creditBalanceInitial) +
                    ". A $" + df.format(this.getCreditDiscount()) + " credit discount was applied and ";
            if (this.Total >= 30.00) {
                emailString = emailString + "a $3.00 credit was earned for spending $30 or more.";
            } else {
                emailString = emailString + "no credit was earned.";
            }
        }

        Date rewardExpDate = customer.getRewardExpireDate();
        if (  rewardExpDate != null) {
            emailString = emailString +  " Your current credit balance is $" + df.format(customer.getRewardBalance()) +
                    " and expires on " + customer.getRewardExpireDate().toString() + ".";
        }

        emailString = emailString +
                " Your current yearly spend balance is $" + df.format(customer.getSpendBalance()) + ".";

        if (vipStatusReached) {
            emailString = emailString + " You reached VIP status! Your 10% discount will start on " +
                    customer.getVIPDiscountBegins().toString() + " and will last for a year.";
        }

        if (Email.SendEmail(customer.getEmail(), "TCCart Order Receipt", emailString )) {
            result.SendSuccessfully = true;
            result.EmailMessage = emailString;
        } else {

            result.SendSuccessfully = false;
            result.EmailMessage = "";

        }

        return result;
    }

    // KEEP METHODS END

}
